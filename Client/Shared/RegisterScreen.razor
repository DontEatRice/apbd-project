@page "/register"
@layout AuthLayout
@using blazor_project.Shared.Models.DTOs
@inject NavigationManager navigationManager
@inject AuthStateProvider authStateProvider

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
    <DataAnnotationsValidator />

    <label for="inputUsername" class="sr-only">User Name</label>
    <InputText id="inputUsername" class="form-control" placeholder="Username" autofocus @bind-Value="@registerRequest.UserName" />
    <ValidationMessage For="@(() => registerRequest.UserName)" />
    
    <label for="inputPassword" class="sr-only">Password</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="@registerRequest.Password" />
    <ValidationMessage For="@(() => registerRequest.Password)" />
    
    <label for="inputPasswordConfirm" class="sr-only">Password Confirmation</label>
    <InputText type="password" id="inputPasswordConfirm" class="form-control" placeholder="Password Confirmation" @bind-Value="@registerRequest.PasswordConfirm" />
    <ValidationMessage For="@(() => registerRequest.PasswordConfirm)" />
    
    <button class="btn btn-lg btn-primary btn-block" type="submit">Create account</button>
    
    <label class="text-danger">@error</label>
</EditForm>

@code {
    private Register registerRequest {get; set;} = new Register();
    private string? error {get; set;}

    public async Task OnSubmit() {
        error = null;
        try {
            await authStateProvider.Register(registerRequest);
        } catch (Exception ex) {
            error = ex.Message;
        }
    }
}
@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager navigationManager

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<h2>Is authenticated? - @IsAuthenticated</h2>

<AuthorizeView>
    <Authorized>
        <h1>Hello @context.User?.Identity?.Name !!</h1>
    </Authorized>
    <Authorizing>
        <h1>Loading ...</h1>
    </Authorizing>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState {get; set;}
    private bool IsAuthenticated = false;

        protected override async Task OnParametersSetAsync()
        {
            if (AuthenticationState is null)
                return;

            var authState = await AuthenticationState;
            
            if (authState.User.Identity is not null && !authState.User.Identity.IsAuthenticated)
                navigationManager.NavigateTo("/login");

            IsAuthenticated = true;
        }
}

@* public async Task LogoutClick() {
            await authStateProvider.Logout();
            navigationManager.NavigateTo("/login");
        } *@